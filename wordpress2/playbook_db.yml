# playbook_db.yml (Morpheus Integration)
#
# In Morpheus, create 3 cyber secrets
#   Secret/db_user_password
#   secret/db_root_password
# When you create the catalog item, add a password input for each of these
# and then use the secrets as defaults. Users can create their own secrets
# if they wish and then enter them at the command line.
---
- hosts: db_server
  become: true
  tasks:
    - name: Install MariaDB server
      dnf:
        name: mariadb-server
        state: present

    - name: Start and enable MariaDB service
      service:
        name: mariadb
        state: started
        enabled: true

    - name: Set MariaDB root password
      community.mysql.mysql_user:
        name: root
        password: "{{ input.db_root_password }}"
        host: "{{ item }}"
        state: present
      loop:
        - localhost
        - 127.0.0.1

    - name: Remove anonymous users
      community.mysql.mysql_user:
        name: ''
        state: absent
      loop:
        - localhost
        - '%'

    - name: Disallow remote root login
      community.mysql.mysql_user:
        name: root
        host: '%'
        state: absent

    - name: Remove test database
      community.mysql.mysql_db:
        name: test
        state: absent
      register: test_db_removal

    - name: Flush privileges
      community.mysql.mysql_query:
        query: FLUSH PRIVILEGES;
      when: test_db_removal.changed

    - name: Create WordPress database and user
      community.mysql.mysql_db:
        name: wordpressdb
        state: present
        login_user: root
        login_password: "{{ input.db_root_password }}"
        login_host: localhost
        priv: "wordpressuser.*:ALL"
        encoding: utf8mb4
        collation: utf8mb4_general_ci
      register: db_result

    - name: Create WordPress user
      community.mysql.mysql_user:
        name: wordpressuser
        password: "{{ input.db_user_password }}"
        priv: "wordpressdb.*:ALL"
        state: present
        login_user: root
        login_password: "{{ input.db_root_password }}"
        login_host: localhost
      when: db_result.changed

    - name: Allow MariaDB through firewall
      firewalld:
        service: mysql
        permanent: true
        state: enabled
      notify:
        - Reload firewalld

  handlers:
    - name: Reload firewalld
      service:
        name: firewalld
        state: reloaded